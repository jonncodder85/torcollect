// Generated by CoffeeScript 1.6.3
(function() {
  var data, get_point_string, get_points, get_x_position, get_y_position, graph_height, graph_width, initialize_graph, keys, maxim, values, x_space_between_points, y_space_between_points;

  data = graphdata;

  graph_width = function() {
    return document.getElementById("graphspace").clientWidth;
  };

  x_space_between_points = function() {
    return graph_width() / ((values(data)).length - 1);
  };

  get_x_position = function(count) {
    return Math.round(count * x_space_between_points());
  };

  y_space_between_points = function() {
    return graph_height() / maxim(values(data));
  };

  get_y_position = function(value) {
    return Math.round(graph_height() - value * y_space_between_points());
  };

  graph_height = function() {
    return 100;
  };

  get_point_string = function(value, count) {
    return get_x_position(count) + "," + get_y_position(value);
  };

  maxim = function(data, i) {
    if (i == null) {
      i = 0;
    }
    if (i + 1 === data.length) {
      return Math.max(-Infinity, data[i]);
    } else {
      return Math.max(data[i], maxim(data, i + 1));
    }
  };

  values = function(dictionary) {
    var k, v, _results;
    _results = [];
    for (k in dictionary) {
      v = dictionary[k];
      _results.push(v);
    }
    return _results;
  };

  keys = function(dictionary) {
    var k, v, _results;
    _results = [];
    for (k in dictionary) {
      v = dictionary[k];
      _results.push(k);
    }
    return _results;
  };

  get_points = function(data, area) {
    var i, points;
    if (area == null) {
      area = true;
    }
    points = (function() {
      var _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = data.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        _results.push(get_point_string(data[i], i));
      }
      return _results;
    })();
    if (area) {
      points.unshift(0 + "," + graph_height());
      points.push(graph_width() + "," + graph_height());
    }
    return points.join(" ");
  };

  initialize_graph = function() {
    var polygon, sns, svg, vals;
    vals = values(graphdata);
    alert(vals);
    svg = document.getElementById('tc_graph');
    svg.setAttribute('width', graph_width());
    sns = svg.namespaceURI;
    polygon = document.createElementNS(sns, 'polygon');
    polygon.setAttribute("points", get_points(vals));
    polygon.setAttribute("fill", "url(#grad1)");
    return svg.appendChild(polygon);
  };

  initialize_graph();

}).call(this);

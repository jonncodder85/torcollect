// Generated by CoffeeScript 1.6.3
(function() {
  var data, get_point_string, get_points, get_x_position, get_y_position, graph_height, graph_width, initialize_graph, maxim, x_space_between_points, y_space_between_points;

  data = [1, 2, 3, 4, 5, 6];

  graph_width = function() {
    return document.getElementById("graphspace").clientWidth;
  };

  x_space_between_points = function() {
    return graph_width() / data.length;
  };

  get_x_position = function(count) {
    return count * x_space_between_points();
  };

  y_space_between_points = function() {
    return graph_height() / maxim(data);
  };

  get_y_position = function(value) {
    return graph_height() - value * y_space_between_points();
  };

  graph_height = function() {
    return 100;
  };

  get_point_string = function(value, count) {
    return get_x_position(count) + "," + get_y_position(value);
  };

  maxim = function(data, i) {
    if (i == null) {
      i = 0;
    }
    if (i + 1 === data.length) {
      return Math.max(-Infinity, data[i]);
    } else {
      return Math.max(data[i], maxim(data, i + 1));
    }
  };

  get_points = function(data) {
    var i, points;
    points = [
      (function() {
        var _i, _ref, _results;
        _results = [];
        for (i = _i = 0, _ref = data.length; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
          _results.push(get_point_string(data[i], i));
        }
        return _results;
      })()
    ];
    return points.join(" ");
  };

  initialize_graph = function() {
    var polygon, sns, svg;
    svg = document.createElement('svg');
    sns = svg.namespaceURI;
    polygon = document.createElement(sns, 'polygon');
    polygon.setAttribute("points", get_points(data));
    polygon.setAttribute("fill", "#ffffff");
    svg.appendChild(polygon);
    return document.getElementById("graphspace").appendChild(svg);
  };

  initialize_graph();

}).call(this);
